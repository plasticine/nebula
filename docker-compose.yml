version: '2'
services:
  fabio:
    build: "services/fabio"
    restart: always
    environment:
      SERVICE_IGNORE: 'true'
    ports:
      - "9999:9999"
      - "9998:9998"
    volumes_from:
      - certificates

  web:
    build: "services/web"
    restart: always
    environment:
      SERVICE_80_NAME: web
      SERVICE_80_CHECK_HTTP: /health
      SERVICE_80_CHECK_INTERVAL: 10s
      SERVICE_80_CHECK_TIMEOUT: 1s
      SERVICE_80_TAGS: urlprefix-/
    links:
      - nebula

  git:
    build: "services/git"
    restart: always
    environment:
      SERVICE_80_NAME: git
      SERVICE_80_CHECK_HTTP: /health
      SERVICE_80_CHECK_INTERVAL: 10s
      SERVICE_80_CHECK_TIMEOUT: 1s
      SERVICE_80_TAGS: urlprefix-/git
    volumes_from:
      - project_data
    volumes:
      - "./services/git/root/etc/git/hooks:/etc/git/hooks"

  nebula:
    build: "services/nebula"
    command: "phoenix.server"
    restart: always
    expose:
      - "4000"
    extra_hosts:
      - consul:${HOST_IP}
    links:
      - postgres
    environment:
      MIX_ENV: dev
      SERVICE_NAME: nebula
      SERVICE_TAGS: nebula
      # SERVICE_80_CHECK_HTTP: /health
      # SERVICE_80_CHECK_INTERVAL: 10s
      # SERVICE_80_CHECK_TIMEOUT: 1s
    volumes:
      - "./services/nebula:/container/app"
    volumes_from:
      - project_data

  postgres:
    build: "services/postgres"
    restart: always
    environment:
      PGDATA: /container/postgresql/data
      SERVICE_NAME: postgres
      SERVICE_TAGS: nebula
    volumes_from:
      - postgres_data
    ports:
      - "5432:5432"
    expose:
      - "5432"

  certificates:
    image: gliderlabs/alpine:3.4
    command: "true"
    volumes:
      - "./conf/ssl/certificate.crt:/etc/ssl/certificate.crt:ro"
      - "./conf/ssl/certificate.key:/etc/ssl/certificate.key:ro"
      - "./conf/ssl/certificate.pem:/etc/ssl/certificate.pem:ro"

  postgres_data:
    image: gliderlabs/alpine:3.4
    command: "true"
    volumes:
      - "/container/postgresql/data"

  project_data:
    image: gliderlabs/alpine:3.4
    command: "true"
    volumes:
      - "./data/projects:/data/projects"

  consul:
    image: gliderlabs/consul-server:0.6
    command: -client=0.0.0.0 -bootstrap -ui-dir /ui -data-dir /data -advertise=127.0.0.1
    environment:
      SERVICE_IGNORE: 'true'
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  registrator:
    image: gliderlabs/registrator:v7
    command: -internal -ip=127.0.0.1 -resync=30 consul://consul:8500
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
