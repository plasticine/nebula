version: '2'
services:
  haproxy:
    build: "./services/haproxy"
    restart: always
    ports:
      - "5000:443"
      - "1936:1936"
    links:
      - web
      - git

  web:
    build: "./services/web"
    restart: always
    links:
      - orchestrator
    expose:
      - "80"
      - "443"
    volumes:
      - ./services/web/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/web/conf/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./services/web/conf/sites:/etc/nginx/sites:ro
    volumes_from:
      - certificates

  git:
    build: "./services/git"
    restart: always
    expose:
      - "6000"
    links:
      - orchestrator
    volumes_from:
      - git_data
      - certificates

  orchestrator:
    build: "./services/orchestrator"
    command: "phoenix.server"
    restart: always
    depends_on:
      - postgres
    expose:
      - "4000"
    links:
      - postgres
    extra_hosts:
     - nomad:172.20.20.10
     - consul:172.20.20.10
    environment:
      MIX_ENV: dev
    volumes:
      - ./services/orchestrator:/container/app
    volumes_from:
      - haproxy_config
      - git_data

  postgres:
    build: "./services/postgres"
    restart: always
    environment:
      PGDATA: /container/postgresql/data
    volumes_from:
      - postgres_data
    ports:
      - "5432:5432"
    expose:
      - "5432"

  certificates:
    image: gliderlabs/alpine:3.3
    command: "true"
    volumes:
      - ./conf/ssl/certificate.crt:/etc/ssl/certificate.crt:ro
      - ./conf/ssl/certificate.key:/etc/ssl/certificate.key:ro

  git_data:
    image: gliderlabs/alpine:3.3
    command: "true"
    volumes:
      - "./tmp/data/git:/container/git/data"
      - "/container/git/templates"

  postgres_data:
    image: gliderlabs/alpine:3.3
    command: "true"
    volumes:
      - "/container/postgresql/data"
