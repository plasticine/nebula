#!/usr/bin/env bash

set -euo pipefail
IFS=' '

unset GIT_DIR
readonly PUSH_REPO="$PWD"
readonly WORK_DIR="$(mktemp -d)"
readonly NEBULA_URL="http://nebula:4000"  # TODO: should query consul for this...

function on_exit {
  echo "===> Cleaning up..."
  rm -rf "${WORK_DIR}"

  echo "===> Done"
}

trap on_exit EXIT

while read oldrev newrev refspec; do
  cd "${WORK_DIR}"

  # Clone project code and check out deployed revision
  git clone "${PUSH_REPO}" "${WORK_DIR}"
  git checkout "${newrev}"

  echo "===> Sanity checking..."
  if [[ -f "${PUSH_REPO}/nebula_config" ]]; then
    source "${PUSH_REPO}/nebula_config"
  else
    echo "FATAL: project config file not found, something is badly wrong."
    exit 1
  fi

  echo "===> Creating new Deployment with Nebula"
  deployment="$(curl -X "POST" "${NEBULA_URL}/api/v1/deployment?project_id=${NEBULA_PROJECT_ID}&rev=${newrev}&ref=${refspec}")"
  deploy_id="$(echo "$deployment" | jq ".id")"
  deploy_slug="$(echo "$deployment" | jq ".slug")"

  echo "$deploy_id"
  echo "$deploy_slug"

  echo "===> Registering Job for Deployment"
  # Post the nomad job to the deployment endpoint
  if [[ -f .nebula/job.nomad ]]; then
    cat .nebula/job.nomad | curl -s --data-binary "@-" -X "POST" "${NEBULA_URL}/api/v1/deployment/${deploy_id}/job"
  else
    echo "FATAL: job file not found."
    exit 1
  fi

  exit 0
done
