#!/usr/bin/env bash

set -euo pipefail
IFS=' '

unset GIT_DIR
readonly PUSH_REPO="$PWD"
readonly WORK_DIR="$(mktemp -d)"
readonly NEBULA_URL="http://nebula:4000"  # TODO: should query consul for this...

function on_exit {
  echo "===> Cleaning up..."
  rm -rf "${WORK_DIR}"

  echo "===> Done"
}

trap on_exit EXIT

while read oldrev newrev refspec; do
  cd "${WORK_DIR}"

  echo "===> Setting up deployment environment"
  # Clone project code and check out deployed revision
  git clone "${PUSH_REPO}" "${WORK_DIR}"
  git checkout "${newrev}"

  echo "===> Sanity checking..."
  if [[ -f "${PUSH_REPO}/nebula_config" ]]; then
    source "${PUSH_REPO}/nebula_config"
  else
    echo "FATAL: project config file not found, something is badly wrong."
    exit 1
  fi

  echo "===> Creating new Deployment with Nebula"
  deployment="$(curl \
    -sX "POST" \
    "${NEBULA_URL}/api/v1/deployment" \
    -H "Content-Type: application/json" \
    -d "{\"deployment\":{\"project_id\":\"${NEBULA_PROJECT_ID}\",\"rev\":\"${newrev}\",\"ref\":\"${refspec}\"}}")"
  deployment_id="$(echo $deployment | jq ".id")"

  # Post the nomad job to the deployment endpoint
  if [[ -f .nebula/hooks/prepare ]]; then
    echo "===> Running deploy prepare"
    curl
      -sX "PUT" \
      "${NEBULA_URL}/api/v1/deployment/${deployment_id}" \
      -H "Content-Type: application/json" \
      -d "{\"deployment\":{\"state\":\"prepare\"}}"
    if [[ .nebula/hooks/prepare ]]; then
      curl
        -sX "PUT" \
        "${NEBULA_URL}/api/v1/deployment/${deployment_id}" \
        -H "Content-Type: application/json" \
        -d "{\"deployment\":{\"state\":\"prepare_success\"}}"
    else
      curl
        -sX "PUT" \
        "${NEBULA_URL}/api/v1/deployment/${deployment_id}" \
        -H "Content-Type: application/json" \
        -d "{\"deployment\":{\"state\":\"prepare_failed\"}}"
      exit 1
    fi
  fi

  echo "===> Registering Job for Deployment"
  # Post the nomad job to the deployment endpoint
  if [[ -f .nebula/job.nomad ]]; then
    curl \
      -sX "POST" \
      "${NEBULA_URL}/api/v1/deployment/${deployment_id}/job" \
      -H "Content-Type: application/json" \
      -d "{\"job\":{\"spec\":\"$(cat .nebula/job.nomad)\"}}"
  else
    echo "FATAL: job file not found."
    exit 1
  fi

  exit 0
done
