{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cons",
				"consul-server"
			],
			[
				"make",
				"make_request"
			],
			[
				"spec",
				"spec_file"
			],
			[
				"j",
				"join	join/2"
			],
			[
				"writ",
				"write!	write!/2"
			],
			[
				"wr",
				"write!	write!/3"
			],
			[
				"tm",
				"tmp_dir!	tmp_dir!/0"
			],
			[
				"rea",
				"raise	raise/1"
			],
			[
				"volumes",
				"volumes_from"
			],
			[
				"valid",
				"valid_attrs"
			],
			[
				"active",
				"activeItem"
			],
			[
				"cw",
				"cwun	React: componentWillUnmount: fn() { ... }"
			],
			[
				"op",
				"options"
			],
			[
				"border",
				"border-bottom-color"
			],
			[
				"hand",
				"handleSelectOption"
			],
			[
				"e",
				"ellipsis"
			],
			[
				"text",
				"text-overflow"
			],
			[
				"fle",
				"flex-direction"
			],
			[
				"tex",
				"text-indent"
			],
			[
				"flex",
				"flex-grow"
			],
			[
				"max-",
				"max-width"
			],
			[
				"ha",
				"haproxy_container_name"
			],
			[
				"smoke",
				"smoke_test"
			],
			[
				"val",
				"validator"
			],
			[
				"com",
				"componentWillUpdate"
			],
			[
				"dis",
				"disabled"
			],
			[
				"call",
				"calledOnce"
			],
			[
				"set",
				"setProps"
			],
			[
				"onS",
				"onSubmitStub"
			],
			[
				"cal",
				"calledOnce"
			],
			[
				"form",
				"formWrapper"
			],
			[
				"ds",
				"describe"
			],
			[
				"pr",
				"property"
			],
			[
				"ne",
				"nextProps"
			],
			[
				"with",
				"withExactArgs"
			],
			[
				"next",
				"nextState"
			],
			[
				"chil",
				"childRoutes"
			],
			[
				"sc",
				"sceneIndex"
			],
			[
				"rec",
				"records"
			],
			[
				"is_",
				"is_list	is_list/1"
			],
			[
				"Con",
				"ContactsShowBpayPayee"
			],
			[
				"nav",
				"navigate_to_page"
			],
			[
				"have",
				"have_content"
			],
			[
				"ac",
				"activity_feed"
			],
			[
				"wid",
				"width"
			],
			[
				"conta",
				"contactType"
			],
			[
				"run",
				"run_cmd"
			],
			[
				"Prop",
				"propTypes"
			],
			[
				"bor",
				"border"
			],
			[
				"mar",
				"margin"
			],
			[
				"acc",
				"accountNumber"
			],
			[
				"di",
				"display"
			],
			[
				"class",
				"className"
			],
			[
				"filter_st",
				"filter_start_date"
			],
			[
				"visit",
				"visitors"
			],
			[
				"app",
				"apply_visitor"
			],
			[
				"get",
				"get_visitor"
			],
			[
				"fra",
				"fragment_name"
			],
			[
				"vist",
				"visitors"
			],
			[
				"in",
				"in_list"
			],
			[
				"cla",
				"className"
			],
			[
				"is",
				"isRequired"
			],
			[
				"navigaton",
				"NavigationBar"
			],
			[
				"boo",
				"book"
			],
			[
				"visible",
				"visibleActions"
			],
			[
				"Pro",
				"PropTypes"
			],
			[
				"rece",
				"receiveState"
			],
			[
				"Projec",
				"ProjectsList"
			],
			[
				"act",
				"activities"
			],
			[
				"defm",
				"defmod	defmodule"
			],
			[
				"acti",
				"activity"
			],
			[
				"m",
				"model"
			],
			[
				"connec",
				"connect_options"
			],
			[
				"def",
				"def	def"
			],
			[
				"consul",
				"consul-template"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 301.0,
		"last_filter": "syngo",
		"selected_items":
		[
			[
				"syngo",
				"Set Syntax: Go"
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"terr",
				"Set Syntax: Terraform"
			],
			[
				"set go",
				"Set Syntax: Go"
			],
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"bui",
				"Build: Cancel"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"terra",
				"Set Syntax: Terraform"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"ya",
				"Set Syntax: YAML"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"case",
				"Convert Case: Upper Case"
			],
			[
				"bas",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"she",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"html",
				"Set Syntax: HTML (Rails)"
			],
			[
				"ngin",
				"Set Syntax: nginx"
			],
			[
				"nginx",
				"Set Syntax: nginx"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"d",
				"Git: Diff Current File"
			],
			[
				"con",
				"Convert Case: Lower Case"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"bla",
				"Git: Blame"
			],
			[
				"dif",
				"Git: Diff Current File"
			],
			[
				"erlan",
				"Set Syntax: Erlang"
			],
			[
				"erl",
				"Set Syntax: Erlang"
			],
			[
				"eli",
				"Set Syntax: Elixir"
			],
			[
				"elixir",
				"Set Syntax: Elixir"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"insatl",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"lint this ",
				"SublimeLinter: Lint This View"
			],
			[
				"lint",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"sublime linter set",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"linter",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"linter set",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"sublimlinset",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"mark",
				"Set Syntax: Markdown GFM"
			],
			[
				"markdowned",
				"Set Syntax: Markdown Extended"
			],
			[
				"shell",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"js",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"git",
				"GitHub: History"
			],
			[
				"github",
				"GitHub: History"
			],
			[
				"el",
				"Set Syntax: Elixir"
			],
			[
				"puppe",
				"Set Syntax: Puppet"
			],
			[
				"pupp",
				"Set Syntax: Puppet"
			]
		],
		"width": 529.0
	},
	"console":
	{
		"height": 707.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/justin/Projects/plasticine/nebula/ops/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/consul/resources/user_data.bash.template",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/consul/files/consul-join-cluster",
		"/Users/justin/Projects/plasticine/nebula/docker-compose.yml",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/consul-template/templates/haproxy.cfg.ctmpl",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/models/project.ex",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/variables.tf",
		"/Users/justin/Projects/plasticine/nebula/services/fabio/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/etc/nginx/conf.d/root.conf",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/Makefile",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/bastion.tf",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/terraform.tfvars",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/consul.tf",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/consul/main.tf",
		"/Users/justin/Projects/plasticine/nebula/services/fabio/root/etc/services.d/fabio/run",
		"/Users/justin/Projects/plasticine/nebula/services/fabio/root/etc/fabio/conf.d/fabio.properties",
		"/Users/justin/Projects/plasticine/nebula/services/fabio/root/etc/fix-attrs.d/10-fabio",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/Makefile",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/consul/variables.tf",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/consul/image.json",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/consul/build.json",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/base/scripts/base.bash",
		"/Users/justin/Projects/plasticine/nebula/ops/.gitignore",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/variables.json",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/base/main.json",
		"/Users/justin/Projects/plasticine/nebula/ops/log/.gitkeep",
		"/Users/justin/Projects/plasticine/nebula/ops/config/.gitkeep",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/images/consul/main.json",
		"/Users/justin/Projects/plasticine/nebula/ops/Makefile",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/consul/cluster.tf",
		"/Users/justin/Projects/plasticine/nebula/ops/images/consul/main.json",
		"/Users/justin/Projects/plasticine/nebula/ops/images/base/main.json",
		"/Users/justin/Projects/plasticine/nebula/ops/images/Makefile",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/main.tf",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/.gitignore",
		"/Users/justin/Projects/plasticine/nebula/ops/images/base/build.json",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api/v1/job_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/example/simple/.nebula/Jobfile",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/model/allocation.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/scheduler.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/job.ex",
		"/etc/hosts",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/models/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/model/task_state.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/mix.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/config/dev.exs",
		"/Users/justin/Projects/plasticine/nebula/Vagrantfile",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad.ex",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/etc/nginx/nginx.conf",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/project_repo.ex",
		"/Users/justin/Projects/plasticine/nebula/services/git/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/etc/git/hooks/post-receive",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/etc/git/templates/repo/hooks/post-receive",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/data/git/test-project.git/hooks/post-receive",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/etc/fix-attrs.d/10-nginx",
		"/Users/justin/Projects/plasticine/nebula/ROADMAP.md",
		"/Users/justin/Projects/plasticine/nebula/services/web/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/git_data/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/web/root/etc/nginx/conf.d/root.conf",
		"/Users/justin/Projects/plasticine/nebula/services/web/conf/sites/root.conf",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/data/git/.gitkeep",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/consul-template/conf.d/haproxy.conf",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/services.d/consul-template/run",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/services.d/haproxy/run",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/fix-attrs.d/10-haproxy",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/consul-template/conf.d/_base.conf",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/consul-template/templates/haproxy.conf.ctmpl",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/haproxy/haproxy.conf",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/haproxy.cfg",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/root/etc/services.d/consul-template/down",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/etc/services.d/spawn-fcgi/run",
		"/Users/justin/Projects/plasticine/nebula/services/git/entrypoint.bash",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/etc/services.d/nginx/run",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/nginx/nginx.conf",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/nginx/htpasswd",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/nginx/conf.d/git.conf",
		"/Users/justin/Projects/plasticine/nebula/services/git/root/nginx/proxy.conf",
		"/Users/justin/Projects/plasticine/nebula/services/git/conf/nginx.conf",
		"/Users/justin/Projects/plasticine/nebula/.git/MERGE_MSG",
		"/Users/justin/Projects/plasticine/nebula/.git/COMMIT_EDITMSG",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/model/event.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/api/evaluation.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/binary.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/reaper.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/deploy/show.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/api/jobs.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/api.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/api/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nebula.ex",
		"/Users/justin/Projects/plasticine/nebula/example/simple/.nebula/job.nomad",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/model/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/model/spec.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/http.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/jobs.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/queue.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nomad/nomad.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/nomad/binary.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/nomad_binary.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/job_pool.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/supervisor.ex",
		"/Users/justin/Projects/plasticine/nebula/ops/images/variables.json",
		"/Users/justin/Projects/plasticine/nebula/services/nomad/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/nomad/nomad.conf",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api/v1/deploy_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/nomad/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/nomad.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/nomad/http.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/nomad/jobs.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/orchestrator/endpoint.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/logger.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/scheduler/haproxy.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_scheduler/worker.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/priv/repo/migrations/20160501063638_create_initial.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/models/deploy.ex",
		"/Users/justin/Library/Application Support/Sublime Text 3/Packages/User/GitGutter.sublime-settings",
		"/Users/justin/Library/Application Support/Sublime Text 3/Packages/GitGutter/GitGutter.sublime-settings",
		"/Users/justin/Projects/plasticine/nebula/nebula.sublime-project",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_scheduler.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager/worker.ex",
		"/Users/justin/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/justin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager/haproxy.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/haproxy_view.ex"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
			"",
			"/Users/justin/Projects/plasticine/nebula/services/nebula",
			"",
			"*.tf",
			"",
			"*.jsx",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/ui/src",
			"",
			"*.jsx",
			"*.coffee",
			"",
			"*.jsx",
			"",
			"*.jsx",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto",
			"*.yml",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/spec/core",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/spec/core",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform",
			"/Users/justin/Projects/ferocia/johanna-platform/services",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/spec/core",
			"",
			"<current file>",
			"*.js,*.jsx",
			"",
			"<current file>",
			"",
			"*.css",
			"",
			"*.js",
			"*.jsx",
			"",
			"*.rb",
			"*.css",
			"",
			"*.ex",
			"",
			"*.erb",
			"",
			"*.ex",
			"",
			"*.scss",
			"",
			"*.ex",
			"/Users/justin/Projects/ferocia/pipelite/services/api",
			"/Users/justin/Projects/ferocia/pipelite/services/api/**/*.ex",
			"/Users/justin/Projects/ferocia/pipelite/services/api",
			"/Users/justin/Projects/ferocia/pipelite/services/api/web",
			"/Users/justin/Projects/ferocia/pipelite/services/api/lib",
			"/Users/justin/Projects/ferocia/pipelite/services/api/test",
			"/Users/justin/Projects/ferocia/pipelite/services/api",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"haproxy",
			"template_file",
			"images",
			"build",
			"amis",
			"build.",
			"amis",
			"..",
			"foobar",
			"server",
			"foobar",
			"packer-ap-southeast-2-base",
			"find_http_in_task",
			"find_http_task",
			"DEBUG",
			"INFO",
			"job.nomad",
			"=",
			"   ",
			"  ",
			"0654",
			"git",
			"web",
			"/container/haproxy/ssl/certificate.pem",
			"key",
			"nginx",
			" && \\",
			"nginx",
			"${CONSUL_TEMPLATE_VERSION}",
			" && \\",
			" &&",
			"0.15.0",
			"14",
			"key",
			"task_state",
			"key",
			"TaskStates",
			"k",
			"v",
			"allocation_map",
			"task_state",
			"event_map",
			" => ",
			", ",
			"\": \"",
			"job_id",
			", do: ",
			"endpoint",
			"start_missing_jobs",
			"defp",
			"nomad_executable",
			"json",
			"to_json",
			"nebula_1          |    ",
			"machine_map",
			"@endpoint",
			"Scheduler.",
			"Scheduler.Nomad",
			"job",
			"messages",
			"chat_room",
			"queue",
			"OLD_IMAGE",
			" ",
			"$NOMAD_VERSION",
			"sudo",
			"5432",
			"DeployManager",
			"172.20.20.10",
			", do: ",
			"[]",
			"nil, ",
			"nil",
			"make_request",
			"scheduler",
			"queue",
			"scheduler",
			"DeployScheduler",
			"Nomad",
			"#{NOMAD_VERSION}",
			"sudo",
			"poolboy_config",
			"deploy_scheduler",
			"spec",
			", do: ",
			"_",
			"nomad",
			"->",
			"validate",
			"nomad",
			", do: ",
			"pid",
			" |> ",
			"validate",
			"get_node_url",
			"[]",
			"DeployScheduler",
			"deploy",
			", do: ",
			":reply",
			"deploy_queue",
			", do:",
			"do",
			"DeployManager",
			"DEBUG",
			"nomad",
			"etcd_token",
			"deploy",
			"h4",
			"deployment_id",
			"DeploymentView",
			"deployment",
			"deployments",
			"deployment",
			"deployment_id",
			"project",
			"Deployment",
			"Project",
			"log_path",
			"Nebula.JobView",
			"params",
			"job",
			"deploy_id",
			"--data-binary \"@-\" ",
			"project",
			"AUTOFAC",
			"autofac",
			"Orchestrator"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"deploy_id",
			":nebula",
			"Nebula.",
			"packer-ap-southeast-2-bastion",
			"packer-ap-southeast-2-base",
			"PrefillableInput",
			"serialiseFormValues",
			"getComputedProps",
			"attributesToProps",
			"this.context.form.error('$1')",
			"this.context.form.value('$1')",
			"this.context.form.value('$2')",
			"__reset__",
			"__set__",
			"show_deleted_button",
			"show-deleted-contacts",
			"",
			"lodash/$1",
			"__reset__",
			"__set__",
			"mount_component",
			"FETCH_PROJECTS",
			"REQUEST_PROJECTS_FAILED",
			"input--with-stepper",
			"input--number-stepper",
			"Pipelite."
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.33,
			0.66,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GoSublime-output":
	{
		"height": 122.0
	},
	"output.MarGo-output":
	{
		"height": 122.0
	},
	"output.exec":
	{
		"height": 446.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 505.0
	},
	"pinned_build_system": "",
	"project": "nebula.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"docker",
				"ops/Dockerfile"
			],
			[
				"project",
				"services/nebula/web/models/project.ex"
			],
			[
				"hapr",
				"services/haproxy/root/etc/consul-template/templates/haproxy.cfg.ctmpl"
			],
			[
				"haprox",
				"services/haproxy/root/etc/consul-template/templates/haproxy.cfg.ctmpl"
			],
			[
				"jbocon",
				"services/nebula/web/controllers/api/v1/job_controller.ex"
			],
			[
				"jobfil",
				"example/simple/.nebula/Jobfile"
			],
			[
				"haproxy",
				"services/haproxy/root/etc/consul-template/templates/haproxy.cfg.ctmpl"
			],
			[
				"vagrant",
				"Vagrantfile"
			],
			[
				"dev",
				"services/nebula/config/dev.exs"
			],
			[
				"jobcontr",
				"services/nebula/web/controllers/api/v1/job_controller.ex"
			],
			[
				"nginx",
				"services/git/root/etc/nginx/nginx.conf"
			],
			[
				"root.",
				"services/git/root/etc/nginx/conf.d/root.conf"
			],
			[
				"projecre",
				"services/nebula/lib/project_repo.ex"
			],
			[
				"hapro",
				"services/haproxy/root/etc/consul-template/templates/haproxy.cfg.ctmpl"
			],
			[
				"nomad",
				"example/simple/.nebula/job.nomad"
			],
			[
				"deploy",
				"services/nebula/web/templates/deploy/show.html.eex"
			],
			[
				"binary",
				"services/nebula/lib/nomad/binary.ex"
			],
			[
				"vag",
				"Vagrantfile"
			],
			[
				"binar",
				"services/nebula/lib/nomad/binary.ex"
			],
			[
				"nomadbin",
				"services/nebula/lib/scheduler/nomad/binary.ex"
			],
			[
				"jobcontrol",
				"services/nebula/web/controllers/api/v1/job_controller.ex"
			],
			[
				"mix",
				"services/nebula/mix.exs"
			],
			[
				".nomad",
				"example/simple/.nebula/job.nomad"
			],
			[
				"deploycontro",
				"services/nebula/web/controllers/api/v1/deploy_controller.ex"
			],
			[
				"endpo",
				"services/nebula/lib/orchestrator/endpoint.ex"
			],
			[
				"jobcon",
				"services/nebula/web/controllers/api/v1/job_controller.ex"
			],
			[
				"read",
				"README.md"
			],
			[
				"userda",
				"ops/resources/nomad/resources/user_data.yml.template"
			],
			[
				"vagra",
				"Vagrantfile"
			],
			[
				"post",
				"services/git_data/templates/repo/hooks/post-receive"
			],
			[
				"job",
				"services/nebula/web/models/job.ex"
			],
			[
				"projec",
				"services/nebula/web/controllers/project_controller.ex"
			],
			[
				"pos",
				"data/git/test-project.git/hooks/post-receive"
			],
			[
				"rou",
				"services/nebula/web/router.ex"
			],
			[
				"route",
				"services/nebula/web/router.ex"
			],
			[
				"rout",
				"services/nebula/web/router.ex"
			],
			[
				"gitdocker",
				"services/git/Dockerfile"
			],
			[
				"projeccon",
				"services/nebula/web/controllers/project_controller.ex"
			],
			[
				"deploymen",
				"services/nebula/web/controllers/api/v1/deployment.ex"
			],
			[
				"projeccoon",
				"services/nebula/web/controllers/project_controller.ex"
			],
			[
				"router",
				"services/nebula/web/router.ex"
			],
			[
				".bash",
				"infrastructure/images/base/scripts/reboot.bash"
			],
			[
				"dockercom",
				"infrastructure-orchestrator/docker-compose.yml"
			],
			[
				"view.ex",
				"infrastructure-orchestrator/services/orchestrator/web/views/dashboard_view.ex"
			],
			[
				"projectview",
				"infrastructure-orchestrator/services/orchestrator/web/views/project_view.ex"
			],
			[
				"dashinde",
				"infrastructure-orchestrator/services/orchestrator/web/templates/dashboard/index.html.eex"
			],
			[
				"projecinde",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/index.html.eex"
			],
			[
				"deployment",
				"infrastructure-orchestrator/services/orchestrator/web/controllers/api/v1/deployment.ex"
			],
			[
				"loginde",
				"infrastructure-orchestrator/services/orchestrator/web/templates/log/index.html.eex"
			],
			[
				"dash",
				"infrastructure-orchestrator/services/orchestrator/web/templates/dashboard/index.html.eex"
			],
			[
				"projecindex",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/index.html.eex"
			],
			[
				"projshow",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/show.html.eex"
			],
			[
				"projecli",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/index.html.eex"
			],
			[
				"form.html",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/form.html.eex"
			],
			[
				"projecnew",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/new.html.eex"
			],
			[
				"repo",
				"infrastructure-orchestrator/services/orchestrator/lib/orchestrator/repo.ex"
			],
			[
				"projectcon",
				"infrastructure-orchestrator/services/orchestrator/web/controllers/project_controller.ex"
			],
			[
				"en",
				"infrastructure-orchestrator/services/orchestrator/lib/orchestrator/endpoint.ex"
			],
			[
				"mix.",
				"infrastructure-orchestrator/services/orchestrator/mix.exs"
			],
			[
				"root.con",
				"infrastructure-orchestrator/services/web/conf/sites/root.conf"
			],
			[
				"haprx",
				"infrastructure-orchestrator/services/haproxy_config/haproxy.cfg"
			],
			[
				"root",
				"infrastructure-orchestrator/services/web/conf/root.conf"
			],
			[
				"dashboard",
				"infrastructure-orchestrator/services/orchestrator/web/templates/dashboard/index.html.eex"
			],
			[
				"logtest",
				"infrastructure-orchestrator/services/orchestrator/test/models/log_test.exs"
			],
			[
				"projeccontrol",
				"infrastructure-orchestrator/services/orchestrator/test/controllers/project_controller_test.exs"
			],
			[
				"deplotest",
				"infrastructure-orchestrator/services/orchestrator/test/models/deploy_test.exs"
			],
			[
				"test",
				"infrastructure-orchestrator/services/orchestrator/config/test.exs"
			],
			[
				"logcontr",
				"infrastructure-orchestrator/services/orchestrator/test/controllers/log_controller_test.exs"
			],
			[
				"projecte",
				"infrastructure-orchestrator/services/orchestrator/test/models/project_test.exs"
			],
			[
				"makefile",
				"infrastructure/images/Makefile"
			],
			[
				"mix.e",
				"services/orchestrator/mix.exs"
			],
			[
				"covera",
				"services/orchestrator/deps/excoveralls/lib/conf/coveralls.json"
			],
			[
				"deploy_test.exs",
				"infrastructure-orchestrator/services/orchestrator/test/models/deploy_test.exs"
			],
			[
				"pagecon",
				"infrastructure-orchestrator/services/orchestrator/test/controllers/page_controller_test.exs"
			],
			[
				"dev.e",
				"infrastructure-orchestrator/services/orchestrator/config/dev.exs"
			],
			[
				"vagrantfile",
				"infrastructure-orchestrator/Vagrantfile"
			],
			[
				"consu",
				"infrastructure/images/base/provision/consul/consul-join-cluster"
			],
			[
				"node",
				"infrastructure/images/base/provision/setup-node-environment"
			],
			[
				"disc",
				"infrastructure/images/base/provision/discover-consul-servers"
			],
			[
				"consujo",
				"infrastructure/images/base/provision/consul/consul-join-cluster"
			],
			[
				"netwo",
				"infrastructure/infrastructure/networking.tf"
			],
			[
				"sec",
				"infrastructure/infrastructure/security.tf"
			],
			[
				"nodeen",
				"infrastructure/images/base/scripts/node-environment.bash"
			],
			[
				"consul",
				"infrastructure/images/consul/files/consul-join-cluster"
			],
			[
				"nomad-",
				"infrastructure/images/nomad/files/nomad-join-cluster"
			],
			[
				"images/consul/files/consul.service",
				"infrastructure/images/consul/files/consul.service"
			],
			[
				"cons",
				"infrastructure/images/consul/files/consul-join-cluster.bash"
			],
			[
				"var",
				"infrastructure/infrastructure/variables.tf"
			],
			[
				"consser",
				"infrastructure/images/consul/files/consul.service"
			],
			[
				"cluster",
				"infrastructure/infrastructure/nomad/cluster.tf"
			],
			[
				"consucl",
				"infrastructure/infrastructure/consul/cluster.tf"
			],
			[
				"consulj",
				"infrastructure/images/consul/files/consul-join"
			],
			[
				"proc",
				"infrastructure-orchestrator/Procfile"
			],
			[
				"api",
				"spec/api_helper.rb"
			],
			[
				"single",
				"app/views/layouts/single_page_app.html.erb"
			],
			[
				"micronavigation",
				"services/ui/src/components/common/MicroNavigation/__tests__/index.jsx"
			],
			[
				"authen",
				"app/views/layouts/authenticated.html.erb"
			],
			[
				"application",
				"services/ui/src/Application.jsx"
			],
			[
				"accountcon",
				"app/controllers/accounts_controller.rb"
			],
			[
				"processing_scene",
				"services/ui/src/legacy/application/scenes/processing_scene.coffee"
			],
			[
				"makcio",
				"services/ui/config/karma/makeConfig.js"
			],
			[
				"dumbindex",
				"services/ui/src/components/common/DumbHTMLLoader/index.jsx"
			],
			[
				"dumb",
				"services/ui/src/components/common/DumbHTMLLoader/__tests__/index.jsx"
			],
			[
				"fullpagemess",
				"services/ui/src/components/FullPageMessage.jsx"
			],
			[
				"fullpagemessage",
				"services/ui/src/components/FullPageMessage.jsx"
			],
			[
				"fullpage",
				"services/ui/src/components/FullPageMessage.jsx"
			],
			[
				"dumbind",
				"services/ui/src/components/common/DumbHTMLLoader/__tests__/index.jsx"
			],
			[
				"dumbinde",
				"services/ui/src/components/common/DumbHTMLLoader/index.jsx"
			],
			[
				"checkinde",
				"services/ui/src/components/common/CheckableGroupInput/index.jsx"
			],
			[
				"payanyindex",
				"services/ui/src/components/scenes/pay_anyone/PayAnyoneDetailsScene/index.jsx"
			],
			[
				"bpaydetailinde",
				"services/ui/src/components/scenes/bpay/BpayDetailsScene/index.jsx"
			],
			[
				"smartamount",
				"services/ui/src/components/common/SmartAmountInput/index.jsx"
			],
			[
				"trackactioninde",
				"services/ui/src/lib/trackAction/index.js"
			],
			[
				"prefill",
				"services/ui/src/components/common/PrefillableInput/index.jsx"
			],
			[
				"transferdetailsscene",
				"services/ui/src/components/scenes/transfer/TransferDetailsScene/index.jsx"
			],
			[
				"smartamountinput",
				"services/ui/src/components/common/SmartAmountInput/index.jsx"
			],
			[
				"site",
				"services/nginx/sites.ctmpl"
			],
			[
				"webhookhandler",
				"services/api/lib/pipelite/webhook_handler.ex"
			],
			[
				"logdownloader",
				"services/api/lib/buildkite/log_downloader.ex"
			],
			[
				"nat",
				"infrastructure/nat.tf"
			],
			[
				"consulser",
				"infrastructure/consul/server.tf"
			],
			[
				"summarpanindex",
				"services/ui/src/components/PaymentSummaryPanel/index.jsx"
			],
			[
				"transfersummarypanel",
				"services/ui/src/components/TransferSummaryPanel.jsx"
			],
			[
				"transferconf",
				"services/ui/src/components/scenes/transfer/TransferConfirmScene/index.jsx"
			],
			[
				"money",
				"services/ui/src/lib/money/Money.js"
			],
			[
				"smarindex",
				"services/ui/src/components/common/SmartAmountInput/index.jsx"
			],
			[
				"remaininglimit",
				"services/ui/src/components/RemainingLimit/__tests__/index.jsx"
			],
			[
				"paymentsummarypanel",
				"services/ui/src/components/PaymentSummaryPanel/__tests__/index.jsx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 2,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 355.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
