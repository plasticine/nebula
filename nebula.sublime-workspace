{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rea",
				"raise	raise/1"
			],
			[
				"volumes",
				"volumes_from"
			],
			[
				"valid",
				"valid_attrs"
			],
			[
				"active",
				"activeItem"
			],
			[
				"cw",
				"cwun	React: componentWillUnmount: fn() { ... }"
			],
			[
				"op",
				"options"
			],
			[
				"border",
				"border-bottom-color"
			],
			[
				"hand",
				"handleSelectOption"
			],
			[
				"e",
				"ellipsis"
			],
			[
				"text",
				"text-overflow"
			],
			[
				"fle",
				"flex-direction"
			],
			[
				"tex",
				"text-indent"
			],
			[
				"flex",
				"flex-grow"
			],
			[
				"max-",
				"max-width"
			],
			[
				"ha",
				"haproxy_container_name"
			],
			[
				"smoke",
				"smoke_test"
			],
			[
				"val",
				"validator"
			],
			[
				"com",
				"componentWillUpdate"
			],
			[
				"dis",
				"disabled"
			],
			[
				"call",
				"calledOnce"
			],
			[
				"set",
				"setProps"
			],
			[
				"onS",
				"onSubmitStub"
			],
			[
				"cal",
				"calledOnce"
			],
			[
				"form",
				"formWrapper"
			],
			[
				"ds",
				"describe"
			],
			[
				"pr",
				"property"
			],
			[
				"ne",
				"nextProps"
			],
			[
				"with",
				"withExactArgs"
			],
			[
				"next",
				"nextState"
			],
			[
				"chil",
				"childRoutes"
			],
			[
				"sc",
				"sceneIndex"
			],
			[
				"rec",
				"records"
			],
			[
				"is_",
				"is_list	is_list/1"
			],
			[
				"Con",
				"ContactsShowBpayPayee"
			],
			[
				"nav",
				"navigate_to_page"
			],
			[
				"have",
				"have_content"
			],
			[
				"ac",
				"activity_feed"
			],
			[
				"wid",
				"width"
			],
			[
				"conta",
				"contactType"
			],
			[
				"run",
				"run_cmd"
			],
			[
				"Prop",
				"propTypes"
			],
			[
				"bor",
				"border"
			],
			[
				"mar",
				"margin"
			],
			[
				"acc",
				"accountNumber"
			],
			[
				"di",
				"display"
			],
			[
				"class",
				"className"
			],
			[
				"filter_st",
				"filter_start_date"
			],
			[
				"visit",
				"visitors"
			],
			[
				"app",
				"apply_visitor"
			],
			[
				"get",
				"get_visitor"
			],
			[
				"fra",
				"fragment_name"
			],
			[
				"vist",
				"visitors"
			],
			[
				"in",
				"in_list"
			],
			[
				"cla",
				"className"
			],
			[
				"is",
				"isRequired"
			],
			[
				"navigaton",
				"NavigationBar"
			],
			[
				"boo",
				"book"
			],
			[
				"visible",
				"visibleActions"
			],
			[
				"Pro",
				"PropTypes"
			],
			[
				"rece",
				"receiveState"
			],
			[
				"Projec",
				"ProjectsList"
			],
			[
				"act",
				"activities"
			],
			[
				"defm",
				"defmod	defmodule"
			],
			[
				"acti",
				"activity"
			],
			[
				"m",
				"model"
			],
			[
				"connec",
				"connect_options"
			],
			[
				"def",
				"def	def"
			],
			[
				"consul",
				"consul-template"
			]
		]
	},
	"buffers":
	[
		{
			"file": "services/nebula/lib/deploy_scheduler.ex",
			"settings":
			{
				"buffer_size": 646,
				"line_ending": "Unix"
			}
		},
		{
			"file": "services/nebula/lib/deploy_manager/worker.ex",
			"settings":
			{
				"buffer_size": 530,
				"line_ending": "Unix"
			}
		},
		{
			"file": "services/nebula/web/controllers/api/v1/deploy_controller.ex",
			"settings":
			{
				"buffer_size": 1908,
				"line_ending": "Unix"
			}
		},
		{
			"file": "services/nebula/web/controllers/api/v1/job_controller.ex",
			"settings":
			{
				"buffer_size": 985,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 301.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"terra",
				"Set Syntax: Terraform"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"ya",
				"Set Syntax: YAML"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"case",
				"Convert Case: Upper Case"
			],
			[
				"bas",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"she",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"html",
				"Set Syntax: HTML (Rails)"
			],
			[
				"ngin",
				"Set Syntax: nginx"
			],
			[
				"nginx",
				"Set Syntax: nginx"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"d",
				"Git: Diff Current File"
			],
			[
				"diff",
				"Git: Diff Current File"
			],
			[
				"con",
				"Convert Case: Lower Case"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"bla",
				"Git: Blame"
			],
			[
				"dif",
				"Git: Diff Current File"
			],
			[
				"erlan",
				"Set Syntax: Erlang"
			],
			[
				"erl",
				"Set Syntax: Erlang"
			],
			[
				"eli",
				"Set Syntax: Elixir"
			],
			[
				"elixir",
				"Set Syntax: Elixir"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"insatl",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"lint this ",
				"SublimeLinter: Lint This View"
			],
			[
				"lint",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"sublime linter set",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"linter",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"linter set",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"sublimlinset",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"mark",
				"Set Syntax: Markdown GFM"
			],
			[
				"markdowned",
				"Set Syntax: Markdown Extended"
			],
			[
				"shell",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"js",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"git",
				"GitHub: History"
			],
			[
				"github",
				"GitHub: History"
			],
			[
				"el",
				"Set Syntax: Elixir"
			],
			[
				"puppe",
				"Set Syntax: Puppet"
			],
			[
				"pupp",
				"Set Syntax: Puppet"
			]
		],
		"width": 529.0
	},
	"console":
	{
		"height": 525.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/justin/Projects/plasticine/nebula",
		"/Users/justin/Projects/plasticine/nebula/example/simple",
		"/Users/justin/Projects/plasticine/nebula/example/simple/.nebula",
		"/Users/justin/Projects/plasticine/nebula/services/nebula",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/orchestrator",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/priv/repo",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/priv/repo/migrations",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api/v1",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/static/assets",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/static/css",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/static/js",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/dashboard",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/deploy",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/api",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/api/v1",
		"/Users/justin/Projects/plasticine/nebula/services/web/conf",
		"/Users/justin/Projects/plasticine/nebula/services/web/conf/sites"
	],
	"file_history":
	[
		"/Users/justin/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/justin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/justin/Projects/plasticine/nebula/example/simple/.nebula/job.nomad",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager/haproxy.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/nebula.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/haproxy_view.ex",
		"/Users/justin/Projects/plasticine/nebula/Vagrantfile",
		"/Users/justin/Projects/plasticine/nebula/README.md",
		"/Users/justin/Projects/plasticine/nebula/ops/resources/nomad/resources/user_data.yml.template",
		"/Users/justin/Projects/plasticine/nebula/ops/images/nomad/files/nomad.service",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager/nomad.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/dashboard/index.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/deploy/show.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/git_data/templates/repo/hooks/post-receive",
		"/Users/justin/Projects/plasticine/nebula/data/git/test-project.git/hooks/post-receive",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/priv/repo/migrations/20160501063638_create_initial.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/api/v1/deploy_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api/v1/deploy_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api/v1/job_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/project_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/models/job.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/api/v1/job_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/controllers/job_controller_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/models/deploy.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager/worker.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/deploy_manager.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/router.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/dashboard_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/deploy_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/dashboard_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/config/dev.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/config/prod.secret.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/config/test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/layout/app.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/models/project.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/deployment/show.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/deploy_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/deployment_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/log/new.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/log/show.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/log/index.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/templates/log/edit.html.eex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/log_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api/v1/deployment_controller.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/job_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/haproxy/haproxy.cfg",
		"/Users/justin/Projects/plasticine/nebula/services/git/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/priv/repo/migrations/20160531200157_create_job.exs",
		"/Users/justin/Projects/plasticine/nebula/services/git/templates/repo/hooks/post-receive",
		"/Users/justin/Projects/plasticine/nebula/example/simple/.nebula/job",
		"/Users/justin/Projects/plasticine/nebula/example/simple/Dockerfile",
		"/Users/justin/Projects/plasticine/nebula/.gitignore",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/README.md",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/mix.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/orchestrator.ex",
		"/Users/justin/Projects/plasticine/nebula/services/web/conf/sites/root.conf",
		"/Users/justin/Projects/plasticine/nebula/docker-compose.yml",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/config/config.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/config/prod.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/orchestrator/endpoint.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/lib/orchestrator/repo.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/gettext.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/priv/repo/seeds.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/controllers/log_controller_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/controllers/page_controller_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/controllers/project_controller_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/models/deploy_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/models/log_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/models/project_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/support/channel_case.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/support/conn_case.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/support/model_case.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/test_helper.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/views/error_view_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/views/layout_view_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/test/views/page_view_test.exs",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/channels/user_socket.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/controllers/api/v1/deployment.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/graphql/nebula_schema.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/graphql/types/project_type.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/models/log.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/api/v1/deployment_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/error_helpers.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/error_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/layout_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/log_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/views/project_view.ex",
		"/Users/justin/Projects/plasticine/nebula/services/nebula/web/web.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/models/deploy.ex",
		"/Users/justin/Projects/plasticine/infrastructure/images/base/scripts/reboot.bash",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/dev/data/git/test-project.git/autofac_config",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/example/simple/.autofac/config",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/views/dashboard_view.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/views/project_view.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/templates/dashboard/index.html.eex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/templates/project/index.html.eex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/models/project.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/controllers/api/v1/deployment.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/views/haproxy_view.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/templates/haproxy/haproxy.cfg.eex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/orchestrator.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/project_repo.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/docker-compose.yml",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/git/Dockerfile",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/git/templates/repo/hooks/post-receive",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/haproxy_config/haproxy.cfg",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/controllers/project_controller.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/templates/project/new.html.eex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/templates/project/form.html.eex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/templates/log/index.html.eex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/web/templates/project/show.html.eex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/.gitignore",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/priv/repo/migrations/20160501063638_create_initial.exs",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/orchestrator/repo.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/project_repo/worker.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/project_vcs.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/project_vcs/worker.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/git.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/lib/orchestrator/endpoint.ex",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/mix.exs",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/git/conf/htpasswd",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/git/entrypoint.bash",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/git/conf/sites/root.conf",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/web/conf/sites/root.conf",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/web/entrypoint.bash",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/git/conf/nginx.conf",
		"/Users/justin/Projects/plasticine/infrastructure-orchestrator/services/orchestrator/entrypoint.bash"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
			"",
			"/Users/justin/Projects/plasticine/nebula/services/nebula",
			"",
			"*.tf",
			"",
			"*.jsx",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/ui/src",
			"",
			"*.jsx",
			"*.coffee",
			"",
			"*.jsx",
			"",
			"*.jsx",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto",
			"*.yml",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/spec/core",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/spec/core",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto",
			"",
			"/Users/justin/Projects/ferocia/johanna-platform",
			"/Users/justin/Projects/ferocia/johanna-platform/services",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/",
			"/Users/justin/Projects/ferocia/johanna-platform/services/j-auto/spec/core",
			"",
			"<current file>",
			"*.js,*.jsx",
			"",
			"<current file>",
			"",
			"*.css",
			"",
			"*.js",
			"*.jsx",
			"",
			"*.rb",
			"*.css",
			"",
			"*.ex",
			"",
			"*.erb",
			"",
			"*.ex",
			"",
			"*.scss",
			"",
			"*.ex",
			"/Users/justin/Projects/ferocia/pipelite/services/api",
			"/Users/justin/Projects/ferocia/pipelite/services/api/**/*.ex",
			"/Users/justin/Projects/ferocia/pipelite/services/api",
			"/Users/justin/Projects/ferocia/pipelite/services/api/web",
			"/Users/justin/Projects/ferocia/pipelite/services/api/lib",
			"/Users/justin/Projects/ferocia/pipelite/services/api/test",
			"/Users/justin/Projects/ferocia/pipelite/services/api",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			", do: ",
			":reply",
			"deploy_queue",
			", do:",
			"do",
			"DeployManager",
			"DEBUG",
			"nomad",
			"etcd_token",
			"deploy",
			"h4",
			"deployment_id",
			"DeploymentView",
			"deployment",
			"deployments",
			"deployment",
			"deployment_id",
			"project",
			"Deployment",
			"Project",
			"log_path",
			"Nebula.JobView",
			"params",
			"job",
			"deploy_id",
			"--data-binary \"@-\" ",
			"project",
			"AUTOFAC",
			"autofac",
			"Orchestrator",
			"Orchestrator.",
			"orchestrator_upstream",
			":orchestrator",
			"orchestrator",
			"Orchestrator.",
			"Orchestrator",
			"orchestrator",
			"AUTOFAC_URL",
			"Autofac",
			"cleanup",
			"...",
			" <> ",
			"project_changeset",
			":insert, ",
			"name",
			"project_vcs",
			"ProjectRepo",
			"git",
			"project",
			"name",
			"deployment",
			"create",
			"deploy_queue",
			"entrypoint",
			"ubuntu",
			"orchestrator",
			"IO.inspect",
			"does not update chosen resource and renders errors when data is invalid",
			"make_valid_attrs(project)",
			"log = Repo.insert! %Log{}",
			"valid_attrs",
			"@valid_attrs",
			"role",
			"create_user",
			"172.20.20.10",
			"\\${DEFAULT_IPV4}",
			"num_servers",
			"local_peers",
			"peers",
			"/provision",
			"/tmp/provision",
			"PEERS",
			"PRIVATE_IPV4",
			"nat",
			"packer-ap-southeast-2-nat",
			"packer-ap-southeast-2-nomad",
			"packer-ap-southeast-2-consul",
			" ",
			"nat",
			"provision",
			"provision/",
			"\" : \"",
			"tee",
			"network",
			"opt",
			"8300",
			"Consul",
			"consul",
			"nomad-join",
			"consul",
			"Consul",
			"consul",
			"notify_success",
			"consul-join",
			"aws_iam_instance_profile",
			"aws_iam_role_policy",
			"aws_iam_instance_profile",
			"server",
			"wait_for_local_consul",
			"consul-join-cluster",
			"consul",
			"run",
			"vagrant",
			"consul",
			"'shell'",
			"private_network",
			":shell,",
			"INFRASTRUCTURE_SERVER_IP",
			"CONSUL_SERVER_IP",
			"NOMAD_SERVER_IP",
			"node.vm.provision :shell,",
			"$INSTALL_CONSUL",
			"$FIX_VMWARE_TOOLS_SCRIPT",
			"$BASE_SYSTEM",
			"$INSTALL_NOMAD",
			"node1",
			"#{$",
			"0.3.2",
			"0.6.4",
			"172.20.10.10",
			"172.20.20.10",
			"\"",
			"node2",
			"nomad3",
			"nomad2",
			"nomad1",
			"consul1",
			"forwarded_port"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"deploy_id",
			":nebula",
			"Nebula.",
			"packer-ap-southeast-2-bastion",
			"packer-ap-southeast-2-base",
			"PrefillableInput",
			"serialiseFormValues",
			"getComputedProps",
			"attributesToProps",
			"this.context.form.error('$1')",
			"this.context.form.value('$1')",
			"this.context.form.value('$2')",
			"__reset__",
			"__set__",
			"show_deleted_button",
			"show-deleted-contacts",
			"",
			"lodash/$1",
			"__reset__",
			"__set__",
			"mount_component",
			"FETCH_PROJECTS",
			"REQUEST_PROJECTS_FAILED",
			"input--with-stepper",
			"input--number-stepper",
			"Pipelite."
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "services/nebula/lib/deploy_scheduler.ex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 646,
						"regions":
						{
						},
						"selection":
						[
							[
								224,
								246
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Elixir/Syntaxes/Elixir.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "services/nebula/lib/deploy_manager/worker.ex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 530,
						"regions":
						{
						},
						"selection":
						[
							[
								346,
								346
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Elixir/Syntaxes/Elixir.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "services/nebula/web/controllers/api/v1/deploy_controller.ex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1908,
						"regions":
						{
						},
						"selection":
						[
							[
								136,
								117
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Elixir/Syntaxes/Elixir.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "services/nebula/web/controllers/api/v1/job_controller.ex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 985,
						"regions":
						{
						},
						"selection":
						[
							[
								55,
								55
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Elixir/Syntaxes/Elixir.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GoSublime-output":
	{
		"height": 122.0
	},
	"output.MarGo-output":
	{
		"height": 122.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 505.0
	},
	"pinned_build_system": "",
	"project": "nebula.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"haprox",
				"services/nebula/web/views/haproxy_view.ex"
			],
			[
				"read",
				"README.md"
			],
			[
				"userda",
				"ops/resources/nomad/resources/user_data.yml.template"
			],
			[
				"nomad",
				"ops/images/nomad/files/nomad.service"
			],
			[
				"vagra",
				"Vagrantfile"
			],
			[
				".nomad",
				"example/simple/.nebula/job.nomad"
			],
			[
				"post",
				"services/git_data/templates/repo/hooks/post-receive"
			],
			[
				"job",
				"services/nebula/web/models/job.ex"
			],
			[
				"projec",
				"services/nebula/web/controllers/project_controller.ex"
			],
			[
				"pos",
				"data/git/test-project.git/hooks/post-receive"
			],
			[
				"rou",
				"services/nebula/web/router.ex"
			],
			[
				"route",
				"services/nebula/web/router.ex"
			],
			[
				"deploy",
				"services/nebula/web/models/deploy.ex"
			],
			[
				"rout",
				"services/nebula/web/router.ex"
			],
			[
				"gitdocker",
				"services/git/Dockerfile"
			],
			[
				"projeccon",
				"services/nebula/web/controllers/project_controller.ex"
			],
			[
				"deploymen",
				"services/nebula/web/controllers/api/v1/deployment.ex"
			],
			[
				"projeccoon",
				"services/nebula/web/controllers/project_controller.ex"
			],
			[
				"router",
				"services/nebula/web/router.ex"
			],
			[
				".bash",
				"infrastructure/images/base/scripts/reboot.bash"
			],
			[
				"dockercom",
				"infrastructure-orchestrator/docker-compose.yml"
			],
			[
				"view.ex",
				"infrastructure-orchestrator/services/orchestrator/web/views/dashboard_view.ex"
			],
			[
				"projectview",
				"infrastructure-orchestrator/services/orchestrator/web/views/project_view.ex"
			],
			[
				"dashinde",
				"infrastructure-orchestrator/services/orchestrator/web/templates/dashboard/index.html.eex"
			],
			[
				"projecinde",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/index.html.eex"
			],
			[
				"hapro",
				"infrastructure-orchestrator/services/haproxy_config/haproxy.cfg"
			],
			[
				"hapr",
				"infrastructure-orchestrator/services/orchestrator/web/views/haproxy_view.ex"
			],
			[
				"deployment",
				"infrastructure-orchestrator/services/orchestrator/web/controllers/api/v1/deployment.ex"
			],
			[
				"loginde",
				"infrastructure-orchestrator/services/orchestrator/web/templates/log/index.html.eex"
			],
			[
				"dash",
				"infrastructure-orchestrator/services/orchestrator/web/templates/dashboard/index.html.eex"
			],
			[
				"projecindex",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/index.html.eex"
			],
			[
				"projshow",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/show.html.eex"
			],
			[
				"projecli",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/index.html.eex"
			],
			[
				"form.html",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/form.html.eex"
			],
			[
				"projecnew",
				"infrastructure-orchestrator/services/orchestrator/web/templates/project/new.html.eex"
			],
			[
				"repo",
				"infrastructure-orchestrator/services/orchestrator/lib/orchestrator/repo.ex"
			],
			[
				"projectcon",
				"infrastructure-orchestrator/services/orchestrator/web/controllers/project_controller.ex"
			],
			[
				"project",
				"infrastructure-orchestrator/services/orchestrator/web/models/project.ex"
			],
			[
				"en",
				"infrastructure-orchestrator/services/orchestrator/lib/orchestrator/endpoint.ex"
			],
			[
				"mix.",
				"infrastructure-orchestrator/services/orchestrator/mix.exs"
			],
			[
				"root.con",
				"infrastructure-orchestrator/services/web/conf/sites/root.conf"
			],
			[
				"root.",
				"infrastructure-orchestrator/services/web/conf/sites/root.conf"
			],
			[
				"haprx",
				"infrastructure-orchestrator/services/haproxy_config/haproxy.cfg"
			],
			[
				"root",
				"infrastructure-orchestrator/services/web/conf/root.conf"
			],
			[
				"dashboard",
				"infrastructure-orchestrator/services/orchestrator/web/templates/dashboard/index.html.eex"
			],
			[
				"haproxy",
				"infrastructure-orchestrator/services/orchestrator/web/templates/haproxy/haproxy.cfg.eex"
			],
			[
				"vagrant",
				"infrastructure-orchestrator/Vagrantfile"
			],
			[
				"mix",
				"infrastructure-orchestrator/services/orchestrator/mix.exs"
			],
			[
				"logtest",
				"infrastructure-orchestrator/services/orchestrator/test/models/log_test.exs"
			],
			[
				"projeccontrol",
				"infrastructure-orchestrator/services/orchestrator/test/controllers/project_controller_test.exs"
			],
			[
				"deplotest",
				"infrastructure-orchestrator/services/orchestrator/test/models/deploy_test.exs"
			],
			[
				"test",
				"infrastructure-orchestrator/services/orchestrator/config/test.exs"
			],
			[
				"logcontr",
				"infrastructure-orchestrator/services/orchestrator/test/controllers/log_controller_test.exs"
			],
			[
				"projecte",
				"infrastructure-orchestrator/services/orchestrator/test/models/project_test.exs"
			],
			[
				"makefile",
				"infrastructure/images/Makefile"
			],
			[
				"mix.e",
				"services/orchestrator/mix.exs"
			],
			[
				"covera",
				"services/orchestrator/deps/excoveralls/lib/conf/coveralls.json"
			],
			[
				"deploy_test.exs",
				"infrastructure-orchestrator/services/orchestrator/test/models/deploy_test.exs"
			],
			[
				"pagecon",
				"infrastructure-orchestrator/services/orchestrator/test/controllers/page_controller_test.exs"
			],
			[
				"dev.e",
				"infrastructure-orchestrator/services/orchestrator/config/dev.exs"
			],
			[
				"vagrantfile",
				"infrastructure-orchestrator/Vagrantfile"
			],
			[
				"consu",
				"infrastructure/images/base/provision/consul/consul-join-cluster"
			],
			[
				"node",
				"infrastructure/images/base/provision/setup-node-environment"
			],
			[
				"disc",
				"infrastructure/images/base/provision/discover-consul-servers"
			],
			[
				"consujo",
				"infrastructure/images/base/provision/consul/consul-join-cluster"
			],
			[
				"netwo",
				"infrastructure/infrastructure/networking.tf"
			],
			[
				"sec",
				"infrastructure/infrastructure/security.tf"
			],
			[
				"nodeen",
				"infrastructure/images/base/scripts/node-environment.bash"
			],
			[
				"consul",
				"infrastructure/images/consul/files/consul-join-cluster"
			],
			[
				"nomad-",
				"infrastructure/images/nomad/files/nomad-join-cluster"
			],
			[
				"images/consul/files/consul.service",
				"infrastructure/images/consul/files/consul.service"
			],
			[
				"cons",
				"infrastructure/images/consul/files/consul-join-cluster.bash"
			],
			[
				"var",
				"infrastructure/infrastructure/variables.tf"
			],
			[
				"consser",
				"infrastructure/images/consul/files/consul.service"
			],
			[
				"cluster",
				"infrastructure/infrastructure/nomad/cluster.tf"
			],
			[
				"consucl",
				"infrastructure/infrastructure/consul/cluster.tf"
			],
			[
				"consulj",
				"infrastructure/images/consul/files/consul-join"
			],
			[
				"proc",
				"infrastructure-orchestrator/Procfile"
			],
			[
				"api",
				"spec/api_helper.rb"
			],
			[
				"single",
				"app/views/layouts/single_page_app.html.erb"
			],
			[
				"micronavigation",
				"services/ui/src/components/common/MicroNavigation/__tests__/index.jsx"
			],
			[
				"authen",
				"app/views/layouts/authenticated.html.erb"
			],
			[
				"application",
				"services/ui/src/Application.jsx"
			],
			[
				"accountcon",
				"app/controllers/accounts_controller.rb"
			],
			[
				"processing_scene",
				"services/ui/src/legacy/application/scenes/processing_scene.coffee"
			],
			[
				"makcio",
				"services/ui/config/karma/makeConfig.js"
			],
			[
				"dumbindex",
				"services/ui/src/components/common/DumbHTMLLoader/index.jsx"
			],
			[
				"dumb",
				"services/ui/src/components/common/DumbHTMLLoader/__tests__/index.jsx"
			],
			[
				"fullpagemess",
				"services/ui/src/components/FullPageMessage.jsx"
			],
			[
				"fullpagemessage",
				"services/ui/src/components/FullPageMessage.jsx"
			],
			[
				"fullpage",
				"services/ui/src/components/FullPageMessage.jsx"
			],
			[
				"dumbind",
				"services/ui/src/components/common/DumbHTMLLoader/__tests__/index.jsx"
			],
			[
				"dumbinde",
				"services/ui/src/components/common/DumbHTMLLoader/index.jsx"
			],
			[
				"checkinde",
				"services/ui/src/components/common/CheckableGroupInput/index.jsx"
			],
			[
				"payanyindex",
				"services/ui/src/components/scenes/pay_anyone/PayAnyoneDetailsScene/index.jsx"
			],
			[
				"bpaydetailinde",
				"services/ui/src/components/scenes/bpay/BpayDetailsScene/index.jsx"
			],
			[
				"smartamount",
				"services/ui/src/components/common/SmartAmountInput/index.jsx"
			],
			[
				"trackactioninde",
				"services/ui/src/lib/trackAction/index.js"
			],
			[
				"prefill",
				"services/ui/src/components/common/PrefillableInput/index.jsx"
			],
			[
				"transferdetailsscene",
				"services/ui/src/components/scenes/transfer/TransferDetailsScene/index.jsx"
			],
			[
				"smartamountinput",
				"services/ui/src/components/common/SmartAmountInput/index.jsx"
			],
			[
				"site",
				"services/nginx/sites.ctmpl"
			],
			[
				"docker",
				"docker-compose.yml"
			],
			[
				"webhookhandler",
				"services/api/lib/pipelite/webhook_handler.ex"
			],
			[
				"logdownloader",
				"services/api/lib/buildkite/log_downloader.ex"
			],
			[
				"nat",
				"infrastructure/nat.tf"
			],
			[
				"consulser",
				"infrastructure/consul/server.tf"
			],
			[
				"summarpanindex",
				"services/ui/src/components/PaymentSummaryPanel/index.jsx"
			],
			[
				"transfersummarypanel",
				"services/ui/src/components/TransferSummaryPanel.jsx"
			],
			[
				"transferconf",
				"services/ui/src/components/scenes/transfer/TransferConfirmScene/index.jsx"
			],
			[
				"money",
				"services/ui/src/lib/money/Money.js"
			],
			[
				"smarindex",
				"services/ui/src/components/common/SmartAmountInput/index.jsx"
			],
			[
				"remaininglimit",
				"services/ui/src/components/RemainingLimit/__tests__/index.jsx"
			],
			[
				"paymentsummarypanel",
				"services/ui/src/components/PaymentSummaryPanel/__tests__/index.jsx"
			],
			[
				"moneytest",
				"services/ui/src/lib/money/__tests__/money_test.js"
			],
			[
				"moneyinde",
				"services/ui/src/lib/money/index.js"
			],
			[
				"mone",
				"services/ui/src/lib/money/Money.js"
			],
			[
				"paymenindex",
				"services/ui/src/components/PaymentSummaryPanel/index.jsx"
			],
			[
				"moneyteest",
				"services/ui/src/lib/money/__tests__/money_test.js"
			],
			[
				"smartindex",
				"services/ui/src/components/common/SmartAmountInput/index.jsx"
			],
			[
				"paymentsumm",
				"services/ui/src/components/PaymentSummaryPanel/index.jsx"
			],
			[
				"payanyoneconfirmscene",
				"services/ui/src/components/scenes/pay_anyone/PayAnyoneConfirmScene/index.jsx"
			],
			[
				"moneyjs",
				"services/ui/src/lib/money/Money.js"
			],
			[
				"util.js",
				"services/ui/src/lib/util/index.js"
			],
			[
				"webpack",
				"services/ui/config/webpack/makeConfig.js"
			],
			[
				"testhelper",
				"services/ui/test/helper.js"
			],
			[
				"payanyonedeta",
				"services/ui/src/components/scenes/pay_anyone/PayAnyoneDetailsScene/index.jsx"
			],
			[
				"prefillaop",
				"services/ui/src/components/common/PrefillableOptions/index.jsx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 355.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
